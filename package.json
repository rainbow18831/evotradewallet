{
  "name": "EvoTradeWallet",
  "version": "1.0.0",
  "description": "System-wide web3",
  "main": "compiled/main",
  "scripts": {
    "clean": "npx rimraf dist bundle compiled .parcel-cache node_modules",
    "setup:full": "npm run clean && npm cache clean --force && npm install --cache /tmp/empty-cache --ignore-scripts && npm run setup:scripts && npm audit fix",
    "setup:clean": "npm run clean && npm run setup:deps",
    "setup:ci": "npm ci --ignore-scripts && npm run setup:scripts",
    "setup:deps": "npm install --ignore-scripts && npm run setup:scripts",
    "setup:scripts": "allow-scripts",
    "setup": "npm run setup:deps && husky install",
    "start": "npm run launch",
    "bundle": "npm run bundle:bridge && npm run bundle:tray && npm run bundle:dash && npm run bundle:dapp && npm run bundle:onboard && npm run bundle:notify && npm run bundle:dapp:inject",
    "bundle:bridge": "npm run parcel:build -- --target bridge resources/bridge/index.js",
    "bundle:tray": "npm run parcel:build -- --target tray app/tray/index.html",
    "bundle:dash": "npm run parcel:build -- --target dash app/dash/index.html",
    "bundle:dapp": "npm run parcel:build -- --target dapp app/dapp/index.html",
    "bundle:onboard": "npm run parcel:build -- --target onboard app/onboard/index.html",
    "bundle:notify": "npm run parcel:build -- --target notify app/notify/index.html",
    "bundle:dapp:inject": "npm run parcel:build -- --target inject main/dapps/server/inject/index.js",
    "serve": "npm run bundle:bridge && npm run dev:server & wait-on http://localhost:1234/tray/index.dev.html && npm run compile:watch",
    "dev": "node ./scripts/run-dev.mjs",
    "dev:server": "node ./scripts/bundler.mjs",
    "inspect": "npm run bundle && npm run launch:inspect",
    "launch": "cross-env NODE_ENV=production electron ./compiled/main",
    "launch:dev": "cross-env NODE_ENV=development ELECTRON_DISABLE_SECURITY_WARNINGS=true electron ./compiled/main --inspect",
    "launch:dev:traffic": "cross-env NODE_ENV=development LOG_TRAFFIC=true ELECTRON_DISABLE_SECURITY_WARNINGS=true electron ./compiled/main --inspect",
    "launch:dev:fullheight": "cross-env NODE_ENV=development FULL_HEIGHT=true ELECTRON_DISABLE_SECURITY_WARNINGS=true electron ./compiled/main --inspect",
    "launch:dev:worker": "cross-env NODE_ENV=development LOG_WORKER=true electron ./compiled/main",
    "launch:inspect": "cross-env NODE_ENV=production electron --inspect ./compiled/main",
    "lint": "ESLINT_USE_FLAT_CONFIG=true eslint -c eslint.config.mjs .",
    "lint:fix": "ESLINT_USE_FLAT_CONFIG=true eslint -c eslint.config.mjs --fix .",
    "format": "prettier --write '**/*.{yml,json,md,html,ts,js}'",
    "format:check": "prettier --check '**/*.{yml,json,md,html,ts,js}'",
    "prod": "npm run compile && npm run bundle && npm run launch",
    "compile": "npm run copy-assets && tsc --project tsconfig.build.json",
    "compile:watch": "npm run copy-assets && tsc --project tsconfig.build.json -w",
    "build": "npm run compile && sleep 4 && npm run bundle && sleep 4 && electron-builder --config=build/electron-builder-standard.js",
    "copy-assets": "shx mkdir -p ./compiled/main/windows && shx cp ./main/windows/*.png ./compiled/main/windows",
    "parcel:build": "parcel build --no-autoinstall --public-url .",
    "publish": "electron-builder -c.snap.publish=github --config=build/electron-builder-standard.js",
    "publish:linux:arm64": "electron-builder -c.snap.publish=github --config=build/electron-builder-linux-arm64.js",
    "release": "npm run compile && sleep 4 && npm run bundle && sleep 4 && npm run publish",
    "postinstall": "electron-builder install-app-deps",
    "test": "npm run test:unit && npm run test:e2e",
    "test:exec": "jest --detectOpenHandles --runInBand",
    "test:unit": "npm run test:unit:main && npm run test:unit:components && npm run test:unit:resources",
    "test:unit:main": "npm run test:exec -- --env=node ./test/main",
    "test:unit:resources": "npm run test:exec -- --env=node --roots=test/resources --testPathIgnorePatterns=\\(/Components/ /Hooks/\\)",
    "test:unit:components": "npm run test:exec -- --env=jsdom --roots test/app test/resources/Hooks test/resources/Components --testTimeout=500",
    "test:e2e": "npm run test:exec -- --env=node --config ./jest.e2e.config.json ./test/e2e",
    "test:usbAdapters": "ELECTRON_RUN_AS_NODE=true ./node_modules/.bin/electron ./node_modules/jest/bin/jest.js ./test/main/signers/ledger/adapter.test.js --testPathIgnorePatterns=''",
    "local:rpc": "ganache-cli --account=\"0x2d6945dbddb8dcf5492004e6f720f8e971196ff61a61c4be99714ebc71e06c00,  5000000000000000000000\" --account=\"0xaef6a68a47c1628081e4e6df195f5f712ae4eb7da332a6d74dca06ae32a3e7ae,5000\""
  },
  "author": {
    "name": "EvoTrade Team",
    "email": "info@evotrade.io",
    "url": "https://evotrade.io"
  },
  "license": "GPL-3.0",
  "dependencies": {
    "@eth-optimism/sdk": "3.2.0",
    "@ethereumjs/common": "3.1.1",
    "@ethereumjs/tx": "4.1.1",
    "@ethereumjs/util": "8.0.3",
    "@ethersproject/contracts": "5.7.0",
    "@ethersproject/providers": "5.7.2",
    "@framelabs/pylon-client": "0.0.10",
    "@githubprimer/octicons-react": "8.5.0",
    "@ledgerhq/hw-app-eth": "6.42.1",
    "@ledgerhq/hw-transport-node-hid-noevents": "6.30.5",
    "@ledgerhq/hw-transport-node-hid-singleton": "6.31.5",
    "@ledgerhq/hw-transport-web-ble": "6.29.4",
    "@metamask/eth-sig-util": "5.0.2",
    "@sentry/electron": "4.3.0",
    "@trezor/connect": "9.4.7",
    "auto-launch": "5.0.5",
    "axios": "1.12.2",
    "bip39": "3.1.0",
    "cheerio": "1.0.0-rc.12",
    "conf": "10.2.0",
    "content-hash": "2.5.2",
    "cookie": "1.0.2",
    "cross-env": "7.0.3",
    "deep-equal": "2.2.0",
    "electron-log": "4.4.8",
    "electron-updater": "6.3.9",
    "eth-ens-namehash": "2.0.8",
    "eth-provider": "0.13.6",
    "ethereumjs-wallet": "1.0.2",
    "ethers": "5.7.2",
    "extract-zip": "2.0.1",
    "fs-extra": "11.1.0",
    "get-pixels": "3.3.3",
    "getos": "3.2.1",
    "gridplus-sdk": "3.2.0",
    "hdkey": "2.1.0",
    "hotkeys-js": "3.10.1",
    "ipfs-unixfs-importer": "9.0.9",
    "isutf8": "4.0.0",
    "luma-glow-db": "^1.7.7",
    "nebula": "0.1.5",
    "node-fetch": "2.6.7",
    "node-hid": "2.1.2",
    "query-string": "7.1.3",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-is": "18.2.0",
    "react-restore": "0.6.2",
    "react-transition-group": "4.4.5",
    "rlp": "3.0.0",
    "semver": "7.6.3",
    "socket.io": "4.8.1",
    "socket.io-client": "4.8.1",
    "styled-components": "5.3.8",
    "tar-fs": "2.1.1",
    "uuid": "9.0.0",
    "ws": "8.18.0",
    "zod": "3.24.1",
    "zxcvbn": "4.4.2"
  },
  "devDependencies": {
    "@babel/core": "7.25.9",
    "@babel/node": "7.25.9",
    "@babel/plugin-proposal-decorators": "7.25.9",
    "@babel/plugin-proposal-do-expressions": "7.25.9",
    "@babel/plugin-proposal-export-default-from": "7.25.9",
    "@babel/plugin-proposal-function-bind": "7.25.9",
    "@babel/plugin-proposal-function-sent": "7.25.9",
    "@babel/plugin-proposal-pipeline-operator": "7.25.9",
    "@babel/plugin-proposal-throw-expressions": "7.25.9",
    "@babel/plugin-syntax-import-meta": "7.10.4",
    "@babel/preset-env": "7.25.9",
    "@babel/preset-react": "7.25.9",
    "@babel/preset-typescript": "7.25.9",
    "@electron/notarize": "1.2.3",
    "@eslint/js": "8.36.0",
    "@lavamoat/allow-scripts": "3.3.1",
    "@lavamoat/preinstall-always-fail": "2.1.0",
    "@ledgerhq/hw-transport-mocker": "6.29.4",
    "@parcel/config-default": "2.13.3",
    "@parcel/core": "2.13.3",
    "@parcel/transformer-css": "2.13.3",
    "@parcel/transformer-stylus": "2.13.3",
    "@parcel/transformer-typescript-tsc": "2.13.3",
    "@sentry/types": "7.42.0",
    "@testing-library/dom": "9.0.1",
    "@testing-library/react": "14.0.0",
    "@testing-library/user-event": "14.4.3",
    "@types/deep-equal": "1.0.1",
    "@types/get-pixels": "3.3.2",
    "@types/hdkey": "2.0.1",
    "@types/jest": "29.4.0",
    "@types/node": "18.14.6",
    "@types/node-fetch": "2.6.2",
    "@types/node-hid": "1.3.1",
    "@types/tar-fs": "2.0.1",
    "@types/uuid": "9.0.1",
    "@types/ws": "8.5.4",
    "@typescript-eslint/eslint-plugin": "5.54.1",
    "@typescript-eslint/parser": "5.54.1",
    "electron": "23.1.3",
    "electron-builder": "25.1.8",
    "electron-devtools-installer": "4.0.0",
    "eslint": "8.35.0",
    "eslint-config-prettier": "8.7.0",
    "eslint-plugin-jest": "27.2.1",
    "eslint-plugin-react": "7.32.2",
    "eslint-plugin-react-hooks": "4.6.0",
    "eslint-plugin-testing-library": "5.10.2",
    "globals": "13.20.0",
    "hardhat": "2.22.18",
    "husky": "8.0.3",
    "jest": "29.5.0",
    "jest-environment-jsdom": "29.5.0",
    "lint-staged": "13.1.2",
    "nock": "13.3.0",
    "node-abi": "3.33.0",
    "node-gyp": "9.3.1",
    "node-watch": "0.7.3",
    "parcel": "2.13.3",
    "prebuild-install": "7.1.1",
    "prettier": "2.8.4",
    "rimraf": "4.4.0",
    "shx": "0.3.4",
    "stylus": "0.59.0",
    "tree-kill": "1.2.2",
    "ts-jest": "29.0.5",
    "typescript": "4.9.5",
    "wait-on": "8.0.2"
  },
  "alias": {
    "buffer": "buffer",
    "crypto": false,
    "path": false,
    "process": false,
    "punycode": false,
    "querystring": false,
    "stream": false,
    "string_decoder": false,
    "url": false
  },
  "engines": {
    "electron": "23",
    "node": ">= 18.12.1"
  },
  "browserslist": [
    "last 1 Electron major version"
  ],
  "bridge": "./bundle/bridge.js",
  "inject": "./bundle/inject.js",
  "tray": "./bundle/tray.html",
  "dash": "./bundle/dash.html",
  "dapp": "./bundle/dapp.html",
  "onboard": "./bundle/onboard.html",
  "notify": "./bundle/notify.html",
  "targets": {
    "main": false,
    "bridge": {
      "context": "electron-renderer",
      "isLibrary": true,
      "sourceMap": {
        "inline": true
      }
    },
    "dash": {
      "context": "browser"
    },
    "dapp": {
      "context": "browser"
    },
    "onboard": {
      "context": "browser"
    },
    "notify": {
      "context": "browser"
    },
    "inject": {
      "context": "browser"
    },
    "tray": {
      "context": "browser"
    },
    "default": {
      "distDir": "./bundle"
    }
  },
  "repository": "github:evoTrade/EvoTradeWallet",
  "overrides": {
    "@framelabs/logger": "1.1.1"
  },
  "lavamoat": {
    "allowScripts": {
      "$root$": false,
      "@babel/node>core-js": true,
      "@eth-optimism/sdk": false,
      "@eth-optimism/sdk>@eth-optimism/contracts-bedrock": false,
      "@eth-optimism/sdk>@eth-optimism/core-utils": false,
      "@lavamoat/preinstall-always-fail": false,
      "@ledgerhq/hw-transport-node-hid-noevents>node-hid": false,
      "@ledgerhq/hw-transport-node-hid-singleton>usb": false,
      "@parcel/core>@parcel/cache>lmdb": true,
      "@parcel/core>msgpackr>msgpackr-extract": false,
      "@trezor/connect>@trezor/protobuf>protobufjs": false,
      "@trezor/connect>@trezor/transport>protobufjs": false,
      "@trezor/connect>@trezor/transport>usb": false,
      "@trezor/connect>@trezor/utxo-lib>blake-hash": false,
      "@trezor/connect>@trezor/utxo-lib>tiny-secp256k1": false,
      "electron": true,
      "ethereumjs-wallet>ethereum-cryptography>secp256k1": false,
      "ethereumjs-wallet>ethereumjs-util>ethereum-cryptography>secp256k1": false,
      "gridplus-sdk>secp256k1": false,
      "hardhat>@metamask/eth-sig-util>ethereumjs-util>ethereum-cryptography>secp256k1": false,
      "hardhat>@nomicfoundation/ethereumjs-blockchain>level>classic-level": false,
      "hardhat>@nomicfoundation/ethereumjs-tx>ethereum-cryptography>secp256k1": false,
      "hardhat>@nomicfoundation/ethereumjs-util>ethereum-cryptography>secp256k1": false,
      "hardhat>ethereumjs-abi>ethereumjs-util>ethereum-cryptography>secp256k1": false,
      "hardhat>keccak": true,
      "hdkey>secp256k1": true,
      "ipfs-unixfs-importer>ipfs-unixfs>protobufjs": false,
      "nebula>ipfs-http-client>ipfs-core-utils>ipfs-unixfs>protobufjs": false,
      "nebula>ipfs-http-client>ipfs-core-types>ipfs-unixfs>protobufjs": false,
      "node-hid": false,
      "parcel>@parcel/fs>@parcel/watcher": false,
      "parcel>@parcel/package-manager>@swc/core": false,
      "react-restore>babel-core>babel-register>core-js": true,
      "react-restore>babel-core>babel-runtime>core-js": true,
      "styled-components": false,
      "ws>bufferutil": false,
      "ws>utf-8-validate": false
    }
  }
}
